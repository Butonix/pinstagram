mixin imgCard(image = {})
  section
    .img-card(style="position: relative;")
      .img-card__header.row
        .user.row
          a.img(href=`/${image.author.slug}`) 
            img(src=h.avatar(image.author, 200), alt=`${image.author.name}'s' avatar`)
          a.username(href=`/${image.author.slug}`)= image.author.username
        if user && user._id.equals(image.author._id)
          a.remove-image(href=`/p/${image.url}/remove`) remove image
      .img-card__image
        img(src=`/uploads/${image.photo}` alt=`${image.caption}`)  
      .img-card__content
        .content__likes.row
          if user
            form.icon(method="POST", action=`/api/like/${image._id}`)
              - const likesList = image.likes.map(obj => obj.toString());
              - const likesClass = likesList.includes(user._id.toString()) ? 'icon__heart on' : 'icon__heart'
              button(type="submit" name="likes" class=likesClass)
            a.likes.modal__open(href=`/p/${image.url}/likes`) #{image.likes.length} likes    
        .content__caption
          p.caption= image.caption
        if image.comments.length
        .content__comments   
          ul.comments
            each comment in image.comments
              li.row
                .row
                  a(href=`/${comment.author.slug}`)= comment.author.username
                  span= comment.text.replace(/&lt;/g,'<')
                if user && user._id.equals(comment.author._id)
                  a.remove-comment(href=`/api/comment/${comment._id}/remove`) âœ•
        time.img-card__date(datetime=image.created)
          p= h.moment(image.created).startOf().fromNow()
      .img-card__comment
        if (user)
          form.comment(action=`/api/comment/${image._id}`, method="POST")
            input(name="text", placeholder="Add a comment...", autocomplete="off" maxlength="140")
